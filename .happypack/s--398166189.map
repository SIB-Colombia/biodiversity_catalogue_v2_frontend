{"version":3,"sources":["src/auth/index.js"],"names":["http","isAuthenticated","me","signin","logout","type","method","server","local","then","response","json","data","localStorage","removeItem"],"mappings":";;;;;QAKgBA,I,GAAAA,I;QAaAC,e,GAAAA,e;QAaAC,E,GAAAA,E;QAYAC,M,GAAAA,M;QAYAC,M,GAAAA,M;;AAvDhB;;;;AACA;;;;;;AAEA;;AAEO,SAASJ,IAAT,CAAcK,IAAd,EAAoB;;AAEzB,SAAO;AACLC,YAAQD;AADH,GAAP;AAOD;;AAED;;AAEO,SAASJ,eAAT,GAA2B,CASjC;AARC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGF;;AAEO,SAASC,EAAT,GAAc;;AAEnB,iCAAS,gBAAMK,MAAN,CAAaC,KAAtB,mBAA2C,KAAKR,IAAL,CAAU,KAAV,CAA3C,EAA6DS,IAA7D,CAAkE,UAACC,QAAD,EAAc;AAC9E,WAAOA,SAASC,IAAT,EAAP;AACD,GAFD,EAEGF,IAFH,CAEQ,UAACG,IAAD,EAAU;AAChB,WAAOA,IAAP;AACD,GAJD;AAMD;;AAED;;AAEO,SAAST,MAAT,GAAkB;;AAEvB,iCAAS,gBAAMI,MAAN,CAAaC,KAAtB,kBAA0C,KAAKR,IAAL,CAAU,MAAV,CAA1C,EAA6DS,IAA7D,CAAkE,UAACC,QAAD,EAAc;AAC9E,WAAOA,SAASC,IAAT,EAAP;AACD,GAFD,EAEGF,IAFH,CAEQ,UAACG,IAAD,EAAU;AAChB,WAAOA,IAAP;AACD,GAJD;AAMD;;AAED;;AAEO,SAASR,MAAT,GAAkB;;AAEvBS,eAAaC,UAAb,CAAwB,gBAAxB;AAED;;;;;;;;gCAtDed,I;;gCAaAC,e;;gCAaAC,E;;gCAYAC,M;;gCAYAC,M","file":"index.js","sourceRoot":"/home/leo/htdocs/biodiversity_catalogue_v2_frontend","sourcesContent":["import fetch from 'isomorphic-fetch';\nimport Const from '../const';\n\n//Http\n\nexport function http(type) {\n\n  return {\n    method: type,\n    // mode: 'cors',\n    // headers: new Headers({\n    // 'Authorization': `bearer ${localStorage.getItem('token-catalogo')}`\n    // })\n  }\n}\n\n//is authenticated\n\nexport function isAuthenticated() {\n  // console.log(nextState);\n  // console.log(replaceState);\n  // console.log('herisAuthenticatede');\n  // return false;\n  // return typeof localStorage.getItem('token-catalogo')\n  // !=='undefined'\n  //   ? true\n  //   : false;\n}\n\n//Get Me\n\nexport function me() {\n\n  fetch(`${Const.server.local}/api/user/me`, this.http('GET')).then((response) => {\n    return response.json()\n  }).then((data) => {\n    return data\n  })\n\n}\n\n//signin\n\nexport function signin() {\n\n  fetch(`${Const.server.local}/auth/local`, this.http('POST')).then((response) => {\n    return response.json()\n  }).then((data) => {\n    return data\n  })\n\n}\n\n//logout\n\nexport function logout() {\n\n  localStorage.removeItem('token-catalogo');\n\n}\n"]}