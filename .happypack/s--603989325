var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React, { PropTypes } from 'react';

import { List, ListItem } from 'material-ui/List';
import ContentInbox from 'material-ui/svg-icons/content/inbox';
import ActionGrade from 'material-ui/svg-icons/action/grade';
import ContentSend from 'material-ui/svg-icons/content/send';
import ContentDrafts from 'material-ui/svg-icons/content/drafts';
import Divider from 'material-ui/Divider';
import ActionInfo from 'material-ui/svg-icons/action/info';
import Paper from 'material-ui/Paper';

var LoginSignup = function (_React$Component) {
  _inherits(LoginSignup, _React$Component);

  function LoginSignup() {
    _classCallCheck(this, LoginSignup);

    return _possibleConstructorReturn(this, (LoginSignup.__proto__ || Object.getPrototypeOf(LoginSignup)).apply(this, arguments));
  }

  _createClass(LoginSignup, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        'section',
        null,
        React.createElement(
          Paper,
          { zDepth: 1 },
          React.createElement(
            List,
            null,
            React.createElement(ListItem, { primaryText: 'Inbox', leftIcon: React.createElement(ContentInbox, null) }),
            React.createElement(ListItem, { primaryText: 'Starred', leftIcon: React.createElement(ActionGrade, null) }),
            React.createElement(ListItem, { primaryText: 'Sent mail', leftIcon: React.createElement(ContentSend, null) }),
            React.createElement(ListItem, { primaryText: 'Drafts', leftIcon: React.createElement(ContentDrafts, null) }),
            React.createElement(ListItem, { primaryText: 'Inbox', leftIcon: React.createElement(ContentInbox, null) })
          ),
          React.createElement(Divider, null),
          React.createElement(
            List,
            null,
            React.createElement(ListItem, { primaryText: 'All mail', rightIcon: React.createElement(ActionInfo, null) }),
            React.createElement(ListItem, { primaryText: 'Trash', rightIcon: React.createElement(ActionInfo, null) }),
            React.createElement(ListItem, { primaryText: 'Spam', rightIcon: React.createElement(ActionInfo, null) }),
            React.createElement(ListItem, { primaryText: 'Follow up', rightIcon: React.createElement(ActionInfo, null) })
          )
        )
      );
    }
  }]);

  return LoginSignup;
}(React.Component);

export default LoginSignup;