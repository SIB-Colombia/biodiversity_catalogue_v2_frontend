var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _templateObject = _taggedTemplateLiteral(['\n\nbackground: #dadada;\npadding: 50px 5px;\n\n'], ['\n\nbackground: #dadada;\npadding: 50px 5px;\n\n']);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React from 'react';
import styled from 'styled-components';
import { Grid, Row, Col } from 'react-flexbox-grid';
import Paper from 'material-ui/Paper';
import { Link } from 'components';

var Wrapper = styled.div(_templateObject);

var CategoryCarousel = function (_React$Component) {
  _inherits(CategoryCarousel, _React$Component);

  function CategoryCarousel(props) {
    _classCallCheck(this, CategoryCarousel);

    return _possibleConstructorReturn(this, (CategoryCarousel.__proto__ || Object.getPrototypeOf(CategoryCarousel)).call(this, props));
  }

  _createClass(CategoryCarousel, [{
    key: 'componentDidMount',
    value: function componentDidMount() {}
  }, {
    key: 'render',
    value: function render() {

      var style = {
        height: 100,
        width: 100,
        margin: 20,
        textAlign: 'center',
        display: 'inline-block'
      };

      return React.createElement(
        Wrapper,
        { className: 'grey lighten-4' },
        React.createElement(
          Grid,
          null,
          React.createElement(
            Row,
            null,
            React.createElement(
              Col,
              { xs: 12, className: 'align-center' },
              React.createElement(Paper, { style: style, zDepth: 1, circle: true }),
              React.createElement(Paper, { style: style, zDepth: 1, circle: true }),
              React.createElement(Paper, { style: style, zDepth: 1, circle: true }),
              React.createElement(Paper, { style: style, zDepth: 1, circle: true }),
              React.createElement(Paper, { style: style, zDepth: 1, circle: true }),
              React.createElement(Paper, { style: style, zDepth: 1, circle: true }),
              React.createElement(Paper, { style: style, zDepth: 1, circle: true })
            )
          )
        )
      );
    }
  }]);

  return CategoryCarousel;
}(React.Component);

export default CategoryCarousel;