{"version":3,"sources":["src/components/organisms/FileSearchMenu/index.js"],"names":["Wrapper","div","FileSearchMenu","props","handleRequestDelete","handleAddChip","handleToggleMenu","state","open","chipData","value","name","styles","chip","margin","wrapper","display","flexWrap","chipToDelete","map","indexOf","splice","setState","record","disabled","push","data","schema","subcat","i","items","subrecord","j","listItems","category","renderChip","Component"],"mappings":"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","file":"index.js","sourceRoot":"/home/leo/htdocs/bio","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport Carousel from 'react-slick'\nimport {Grid, Row, Col} from 'react-flexbox-grid'\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardMedia,\n  CardTitle,\n  CardText\n} from 'material-ui/Card';\nimport FlatButton from 'material-ui/FlatButton';\nimport RaisedButton from 'material-ui/RaisedButton';\n\nimport ArrowBack from 'material-ui/svg-icons/hardware/keyboard-arrow-left';\nimport ArrowForward from 'material-ui/svg-icons/hardware/keyboard-arrow-right';\n\nimport Drawer from 'material-ui/Drawer';\nimport Chip from 'material-ui/Chip';\n\nimport {List, ListItem} from 'material-ui/List';\nimport ActionGrade from 'material-ui/svg-icons/action/grade';\nimport Subheader from 'material-ui/Subheader';\n\nimport {Link} from 'components';\n\nconst Wrapper = styled.div `\n\n`\nclass FileSearchMenu extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: true,\n      chipData: [\n        {\n          value: 0,\n          name: 'Angular'\n        }, {\n          value: 1,\n          name: 'JQuery'\n        }, {\n          value: 2,\n          name: 'Polymer'\n        }, {\n          value: 3,\n          name: 'ReactJS'\n        }\n      ]\n    };\n    this.styles = {\n      chip: {\n        margin: 4\n      },\n      wrapper: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      }\n    };\n  }\n\n  handleRequestDelete = (value) => {\n    this.chipData = this.state.chipData;\n    const chipToDelete = this.chipData.map((chip) => chip.value).indexOf(value);\n    this.chipData.splice(chipToDelete, 1);\n    this.setState({chipData: this.chipData});\n  };\n\n  handleAddChip = (record) => {\n    this.chipData = this.state.chipData;\n    record.disabled = true;\n    this.chipData.push(record);\n    this.setState({chipData: this.chipData});\n\n  };\n\n  handleToggleMenu = () => this.setState({\n    open: !this.state.open\n  });\n\n  componentDidMount() {}\n\n  renderChip(data) {\n\n    return (\n      <Chip key={data.value} onRequestDelete={() => this.handleRequestDelete(data.value)} style={this.styles.chip}>\n        {data.name}\n      </Chip>\n    );\n  }\n\n  render() {\n\n    let schema = [\n      {\n        'category': 'Grupos Biológicos',\n        'items': [\n          {\n            name: 'Anfibios',\n            value: 1634\n          }, {\n            name: 'Aves',\n            value: 2755\n          }, {\n            name: 'Hongos',\n            value: 3345\n          }, {\n            name: 'Insectos',\n            value: 4355\n          }, {\n            name: 'Mamíferos',\n            value: 5674\n          }, {\n            name: 'Peces',\n            value: 6325\n          }, {\n            name: 'Plantas',\n            value: 73577\n          }, {\n            name: 'Reptiles',\n            value: 8455\n          }\n        ]\n      }, {\n        'category': 'Departamentos',\n        'items': [\n          {\n            name: 'Cundinamarca',\n            value: 1832\n          }, {\n            name: 'Boyacá',\n            value: 2124\n          }\n        ]\n      }, {\n        'category': 'Ecosistemas',\n        'items': [\n          {\n            name: 'Bosque tropical',\n            value: 135565\n          }, {\n            name: 'Desierto',\n            value: 2456\n          }, {\n            name: 'Bosque seco',\n            value: 33466\n          }, {\n            name: 'Páramo',\n            value: 46225\n          }, {\n            name: 'Bosque de niebla',\n            value: 51123\n          }, {\n            name: 'Humedales',\n            value: 665433\n          }\n        ]\n      }\n    ];\n\n    const subcat = schema.map((record, i) => record.items.map((subrecord, j) => <ListItem key={j} disabled={subrecord.disabled} primaryText={subrecord.name} onTouchTap={() => this.handleAddChip(subrecord)} leftIcon={< ActionGrade />}/>));\n    const listItems = schema.map((record, i) => <ListItem key={i} nestedItems={subcat[i]} primaryText={record.category} initiallyOpen={true} primaryTogglesNestedList={true}/>);\n\n    return (\n      <Wrapper>\n        {/* <RaisedButton label=\"Toggle Drawer\" onTouchTap={this.handleToggleMenu}/> */}\n        <Drawer open={this.state.open}>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <List>\n            <Subheader>Filtros activos</Subheader>\n            <div style={this.styles.wrapper}>\n              {this.state.chipData.map(this.renderChip, this)}\n            </div>\n            {listItems}\n          </List>\n        </Drawer>\n      </Wrapper>\n    )\n  }\n}\n\nexport default FileSearchMenu\n"]}