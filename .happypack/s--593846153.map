{"version":3,"sources":["src/components/molecules/FileComment/index.js"],"names":["FileService","Wrapper","div","FileComment","props","state","new","reply","expanded","newComment","text","fileId","id","then","console","log","response","update","setState","record","e","model","obj","value","target","idx","forEach","i","comments","map","postedBy","username","date","photo","replies","subrecord","j","name","lastname","change","createReply","create","Component"],"mappings":"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","file":"index.js","sourceRoot":"/home/leo/htdocs/biodiversity_catalogue_v2_frontend","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport {Link, TitleSection} from 'components';\nimport {Grid, Row, Col} from 'react-flexbox-grid';\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardMedia,\n  CardTitle,\n  CardText\n} from 'material-ui/Card';\nimport FlatButton from 'material-ui/FlatButton';\nimport Divider from 'material-ui/Divider';\nimport Paper from 'material-ui/Paper';\nimport TextField from 'material-ui/TextField';\nimport Avatar from 'material-ui/Avatar';\nimport List from 'material-ui/List/List';\nimport ListItem from 'material-ui/List/ListItem';\n\nimport {isAuthenticated} from '../../../auth';\nimport * as FileService from '../../../services/FileService';\n\nconst Wrapper = styled.div `\npadding-bottom: 20px;\n.box-comment{\n  padding-top: 0px !important;\n  &.textarea{\n    margin-top: -25px;\n  }\n}\n`\nclass FileComment extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      new: '',\n      reply: '',\n      expanded: []\n    }\n\n  }\n\n  create() {\n    FileService.newComment({text: this.state.new, fileId: this.props.id}).then(response => {\n      console.log('ok', response);\n      this.props.update();\n      this.setState({new: ''})\n    })\n  }\n\n  createReply(record) {\n\n    console.log(record);\n    console.log(this.state.reply);\n\n  }\n\n  change(e, model) {\n    let obj = {};\n    let value = e.target.value;\n    obj[model] = value;\n    this.setState(obj)\n  }\n\n  reply(e, idx) {\n    let obj = this.state.expanded;\n    obj[idx] = !obj[idx];\n    obj.forEach((e, i) => {\n      if (i != idx) {\n        obj[i] = false;\n      }\n    });\n    this.setState({expanded: obj, reply: ''})\n  };\n\n  componentDidMount() {}\n\n  render() {\n\n    return (\n      <Wrapper>\n        <Grid>\n          <Row>\n            <Col xs={12}>\n\n              {this.props.comments.map((record, i) => (\n                <Card key={i} className=\"animated fadeInLeft\">\n                  <CardHeader title={record.postedBy.username} subtitle={`@${record.postedBy.username} - ${record.date}`} avatar={record.postedBy.photo || '/avatar3.png'}/>\n                  <CardText className=\"box-comment\">\n                    {record.text}\n\n                    {record.replies.map((subrecord, j) => (\n                      <Card key={j} className=\"animated fadeInLeft\">\n                        <CardHeader title={`${subrecord.postedBy.name} ${subrecord.postedBy.lastname}`} subtitle={`@${subrecord.postedBy.username} - ${subrecord.date}`} avatar={subrecord.postedBy.photo || '/avatar3.png'}/>\n                        <CardText className=\"box-comment\">\n                          {subrecord.text}\n                        </CardText>\n                        {isAuthenticated() && <CardActions>\n                          <FlatButton label=\"Responder\" onTouchTap={(e) => this.reply(e, i)}/>\n                          <FlatButton label=\"Denunciar\"/>\n                        </CardActions>}\n                      </Card>\n                    ))}\n\n                  </CardText>\n                  {isAuthenticated() && <CardActions>\n                    <FlatButton label=\"Responder\" onTouchTap={(e) => this.reply(e, i)}/>\n                    <FlatButton label=\"Denunciar\"/> {this.state.expanded[i] && <Card className=\"animated fadeIn\">\n                      <CardHeader title={isAuthenticated().username} avatar={isAuthenticated().photo || '/avatar3.png'}/>\n                      <CardText className=\"box-comment textarea\">\n                        <TextField hintText=\"Escriba aquí su comentario\" onChange={(e) => this.change(e, 'reply')} value={this.state.reply} floatingLabelText=\"Comentario\" fullWidth={true} multiLine={true} rows={2}/>\n                      </CardText>\n                      <CardActions>\n                        <FlatButton label=\"Publicar respuesta\" className=\"btn-secondary\" onClick={() => this.createReply(record)}/>\n                      </CardActions>\n                    </Card>}\n                  </CardActions>}\n                  <Divider/>\n                </Card>\n              ))}\n              <Divider/> <br/><br/>{isAuthenticated() && <Card>\n                <CardHeader title={isAuthenticated().username} avatar={isAuthenticated().photo || '/avatar3.png'}/>\n                <CardText className=\"box-comment textarea\">\n                  <TextField hintText=\"Escriba aquí su comentario\" onChange={(e) => this.change(e, 'new')} value={this.state.new} floatingLabelText=\"Comentario\" fullWidth={true} multiLine={true} rows={3}/>\n                </CardText>\n                <CardActions>\n                  <FlatButton label=\"Publicar\" className=\"btn-secondary\" onClick={() => this.create()}/>\n                </CardActions>\n              </Card>}\n              {!isAuthenticated() && <TitleSection align='center' className=\"padding-top-3\">Para poder comentar, por favor inicie sesión primero</TitleSection>}\n            </Col>\n          </Row>\n        </Grid>\n      </Wrapper>\n    )\n  }\n}\n\nexport default FileComment\n"]}