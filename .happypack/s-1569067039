var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _templateObject = _taggedTemplateLiteral(['\n\n'], ['\n\n']);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React from 'react';
import styled from 'styled-components';
import { Link, HomeCard } from 'components';
import { Grid, Row, Col } from 'react-flexbox-grid';
import Carousel from 'react-slick';
import RaisedButton from 'material-ui/RaisedButton';

var Wrapper = styled.div(_templateObject);

var HomeCarousel = function (_React$Component) {
  _inherits(HomeCarousel, _React$Component);

  function HomeCarousel(props) {
    _classCallCheck(this, HomeCarousel);

    var _this = _possibleConstructorReturn(this, (HomeCarousel.__proto__ || Object.getPrototypeOf(HomeCarousel)).call(this, props));

    _this.state = {
      width: 0,
      height: 0
    };

    _this.updateDimensions = _this.updateDimensions.bind(_this);
    return _this;
  }

  _createClass(HomeCarousel, [{
    key: 'updateDimensions',
    value: function updateDimensions() {
      this.setState({ width: window.innerWidth, height: window.innerHeight });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      window.addEventListener("resize", this.updateDimensions);
    }
  }, {
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.updateDimensions();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      window.removeEventListener("resize", this.updateDimensions);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var settings = {
        dots: true,
        arrows: false,
        infinite: true,
        speed: 500,
        autoplay: true,
        lazyLoad: true,
        slidesToShow: 1,
        adaptiveHeight: true,
        slidesToScroll: 1,
        draggable: true,
        responsive: [{
          breakpoint: 768,
          settings: {}
        }, {
          breakpoint: 1024,
          settings: {}
        }, {
          breakpoint: 1368,
          settings: {}
        }, {
          breakpoint: 2000,
          settings: {}
        }, {
          breakpoint: 100000,
          settings: 'unslick'
        }]
      };

      var background = ['11285_orig.jpg', '89714_orig.jpg', '77419_orig.jpg', '53388_orig.jpg'];

      return React.createElement(
        Wrapper,
        { className: 'grey lighten-4' },
        React.createElement(
          Carousel,
          _extends({ ref: function ref(c) {
              return _this2.slider = c;
            } }, settings),
          background.map(function (record, i) {
            return React.createElement(
              'div',
              { key: i },
              React.createElement(HomeCard, { record: record, height: _this2.state.height })
            );
          })
        )
      );
    }
  }]);

  return HomeCarousel;
}(React.Component);

export default HomeCarousel;