{"version":3,"sources":["src/components/molecules/ReactSchemaEasyForm/index.js"],"names":["Wrapper","div","ReactSchemaEasyForm","props","indents","control","temp","schema","instance","value","e","update","change","push","Component"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;;;AACA;;AAEA,IAAMA,UAAU,2BAAOC,GAAjB,iBAAN;;IAIMC,mB;;;AAEJ,+BAAYC,KAAZ,EAAmB;AAAA;;AAAA,qIACXA,KADW;AAEjB;AACA;AACA;AACD;;;;wCAEmB,CAAE;;;yCAED,CAMpB;;AAJC;AACA;AACA;AACA;;;AAGF;AACA;AACA;AACA;AACA;;AAEA;;;;6BAES;AAAA;;AAEP;AACA;AACA;;AAEA,UAAIC,UAAU,EAAd;;AAEA;;AARO,iCAUEC,OAVF;;AAYL;AACA;;AAEA,YAAIC,OAAO,EAAX;;AAEA,gBAAQ,OAAKH,KAAL,CAAWI,MAAX,CAAkBF,OAAlB,EAA2BG,QAAnC;AACE,eAAK,QAAL;AACEF,mBAAO;AAAA;AAAA,gBAAK,WAAU,oBAAf,EAAoC,KAAKD,OAAzC;AACL,uDAAO,MAAK,MAAZ,EAAmB,WAAU,UAA7B,EAAwC,OAAO,OAAKF,KAAL,CAAWI,MAAX,CAAkBF,OAAlB,EAA2BI,KAA1E,EAAiF,UAAU,kBAACC,CAAD;AAAA,yBAAO,OAAKP,KAAL,CAAWQ,MAAX,CAAkBN,OAAlB,EAA2BK,CAA3B,CAAP;AAAA,iBAA3F,GADK;AAEL;AAAA;AAAA;AAAQL;AAAR;AAFK,aAAP;AAIA;AACF,eAAK,QAAL;AACEC,mBAAO;AAAA;AAAA,gBAAK,WAAU,oBAAf,EAAoC,KAAKD,OAAzC;AACL,uDAAO,MAAK,QAAZ,EAAqB,WAAU,UAA/B,EAA0C,OAAO,OAAKF,KAAL,CAAWI,MAAX,CAAkBF,OAAlB,EAA2BI,KAA5E,EAAmF,UAAU,kBAACC,CAAD;AAAA,yBAAO,OAAKP,KAAL,CAAWS,MAAX,CAAkBP,OAAlB,EAA2BK,CAA3B,CAAP;AAAA,iBAA7F,GADK;AAEL;AAAA;AAAA;AAAQL;AAAR;AAFK,aAAP;AAIA;AACF,eAAK,MAAL;AACEC,mBAAO;AAAA;AAAA,gBAAK,WAAU,oBAAf,EAAoC,KAAKD,OAAzC;AACJA,qBADI;AAAA;AACK,uDAAO,MAAK,MAAZ,EAAmB,WAAU,EAA7B,EAAgC,OAAO,OAAKF,KAAL,CAAWI,MAAX,CAAkBF,OAAlB,EAA2BI,KAAlE,EAAyE,UAAU,kBAACC,CAAD;AAAA,yBAAO,OAAKP,KAAL,CAAWS,MAAX,CAAkBP,OAAlB,EAA2BK,CAA3B,CAAP;AAAA,iBAAnF;AADL,aAAP;AAGA;AACF,eAAK,UAAL;;AAEE;AACF;;AArBF;AAwBAN,gBAAQS,IAAR,CAAaP,IAAb;AAzCK;;AAUP,WAAK,IAAID,OAAT,IAAoB,KAAKF,KAAL,CAAWI,MAA/B,EAAuC;AAAA,cAA9BF,OAA8B;AAgCtC;;AAED;;AAEA,aACE;AAAC,eAAD;AAAA;AAGE;AAAA;AAAA,YAAK,WAAU,KAAf;AACE;AAAA;AAAA,cAAM,WAAU,SAAhB;AACGD;AADH;AADF;AAHF,OADF;AAWD;;;;EApF+B,gBAAMU,S;;AAwFxC;AACA;AACA;AACA;AACA;AACA;AACA;;eAEeZ,mB;;;;;;;;;gCApGTF,O;;gCAIAE,mB","file":"index.js","sourceRoot":"/home/leo/htdocs/biodiversity_catalogue_v2_frontend","sourcesContent":["import React, {PropTypes} from 'react'\nimport styled, {css} from 'styled-components'\n// import {Modal} from 'react-materialize';\n\nconst Wrapper = styled.div `\n\n`\n\nclass ReactSchemaEasyForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    // this.state = {\n    //   schema: {}\n    // }\n  }\n\n  componentDidMount() {}\n\n  componentWillMount() {\n\n    // for (let control in this.props.schema) {\n    //   this.props.schema[control].value = '';\n    // }\n    // this.setState({schema: this.props.schema});\n  }\n\n  // change(propertyName, event) {\n  //   let model = this.state.schema;\n  //   model[propertyName].value = event.target.value;\n  //   this.setState({schema: model});\n  // }\n\n  //value={this.state.schema[control]}\n\n  render() {\n\n    // console.log('render');\n    // console.log('easy->', this.props);\n    // console.log('---x', this.state);\n\n    let indents = [];\n\n    // this.setState({'reference': 'jeje'});\n\n    for (let control in this.props.schema) {\n\n      // console.log('');\n      // console.log(control, '->', this.props.schema[control].instance);\n\n      let temp = '';\n\n      switch (this.props.schema[control].instance) {\n        case 'String':\n          temp = <div className=\"input-field col s6\" key={control}>\n            <input type=\"text\" className=\"validate\" value={this.props.schema[control].value} onChange={(e) => this.props.update(control, e)}/>\n            <label>{control}</label>\n          </div>\n          break;\n        case 'Number':\n          temp = <div className=\"input-field col s6\" key={control}>\n            <input type=\"number\" className=\"validate\" value={this.props.schema[control].value} onChange={(e) => this.props.change(control, e)}/>\n            <label>{control}</label>\n          </div>\n          break;\n        case 'Date':\n          temp = <div className=\"input-field col s6\" key={control}>\n            {control}:<input type=\"date\" className=\"\" value={this.props.schema[control].value} onChange={(e) => this.props.change(control, e)}/>\n          </div>\n          break;\n        case 'ObjectID':\n\n          break;\n        default:\n\n      }\n      indents.push(temp);\n    }\n\n    // console.log('---As:', this.props.schema);\n\n    return (\n      <Wrapper>\n        {/* hehe:{JSON.stringify(this.state.schema)} */}\n\n        <div className=\"row\">\n          <form className=\"col s12\">\n            {indents}\n          </form>\n        </div>\n      </Wrapper>\n    )\n  }\n\n}\n\n// ReactSchemaEasyForm.propTypes = {\n// children: PropTypes.node,\n// title: PropTypes.string,\n// id: PropTypes.string,\n// reverse: PropTypes.bool,\n// onClose: PropTypes.func.isRequired,\n// }\n\nexport default ReactSchemaEasyForm;\n"]}