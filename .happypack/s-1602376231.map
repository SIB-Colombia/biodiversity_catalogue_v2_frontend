{"version":3,"sources":["src/components/atoms/Button/index.js"],"names":["fontSize","height","backgroundColor","transparent","disabled","foregroundColor","hoverBackgroundColor","hoverForegroundColor","styles","StyledLink","reverse","palette","theme","props","Anchor","a","StyledButton","button","Button","type","to","href","propTypes","bool","string","number","defaultProps"],"mappings":"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","file":"index.js","sourceRoot":"/home/leo/htdocs/biodiversity_catalogue_v2_frontend","sourcesContent":["import React, {PropTypes} from 'react'\nimport styled, {css} from 'styled-components'\nimport {Link} from 'react-router'\nimport {font, palette} from 'styled-theme'\nimport {ifProp} from 'styled-tools'\n\nconst fontSize = ({height}) => `${height / 40}rem`\n\nconst backgroundColor = ({transparent, disabled}) => transparent\n  ? 'transparent'\n  : palette(disabled\n    ? 2\n    : 1)\n\nconst foregroundColor = ({transparent, disabled}) => transparent\n  ? palette(disabled\n    ? 2\n    : 1)\n  : palette('grayscale', 0, true)\n\nconst hoverBackgroundColor = ({disabled, transparent}) => !disabled && !transparent && palette(0)\nconst hoverForegroundColor = ({disabled, transparent}) => !disabled && transparent && palette(0)\n\nconst styles = css `\n  display: inline-flex;\n  font-family: ${font('primary')};\n  align-items: center;\n  white-space: nowrap;\n  font-size: ${fontSize};\n  border: 0.0625em solid ${ifProp('transparent', 'currentcolor', 'transparent')};\n  height: 2.5em;\n  justify-content: center;\n  text-decoration: none;\n  cursor: ${ifProp('disabled', 'default', 'pointer')};\n  appearance: none;\n  padding: 0 1em;\n  border-radius: 0.125em;\n  box-sizing: border-box;\n  pointer-events: ${ifProp('disabled', 'none', 'auto')};\n  transition: background-color 250ms ease-out, color 250ms ease-out, border-color 250ms ease-out;\n  background-color: ${backgroundColor};\n  color: ${foregroundColor};\n\n  &:hover, &:focus, &:active {\n    background-color: ${hoverBackgroundColor};\n    color: ${hoverForegroundColor};\n  }\n\n  &:focus {\n    outline: none\n  }\n`\n\nconst StyledLink = styled(({\n  disabled,\n  transparent,\n  reverse,\n  palette,\n  height,\n  theme,\n  ...props\n}) => <Link {...props}/>)`${styles}`\nconst Anchor = styled.a `${styles}`\nconst StyledButton = styled.button `${styles}`\n\nconst Button = ({\n  type,\n  ...props\n}) => {\n  if (props.to) {\n    return <StyledLink {...props}/>\n  } else if (props.href) {\n    return <Anchor {...props}/>\n  }\n  return <StyledButton {...props} type={type}/>\n}\n\nButton.propTypes = {\n  disabled: PropTypes.bool,\n  palette: PropTypes.string,\n  transparent: PropTypes.bool,\n  reverse: PropTypes.bool,\n  height: PropTypes.number,\n  type: PropTypes.string,\n  to: PropTypes.string,\n  href: PropTypes.string\n}\n\nButton.defaultProps = {\n  palette: 'primary',\n  type: 'button',\n  height: 40\n}\n\nexport default Button\n"]}