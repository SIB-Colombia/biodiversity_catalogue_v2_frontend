var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React from 'react';
import DropDownMenu from 'material-ui/DropDownMenu';
import MenuItem from 'material-ui/MenuItem';
import { PageTemplate, Header, Footer, HomeCarousel, FileCarousel, CategoryCarousel, GroupCarousel, CommunityCarousel } from 'components';

import * as FileService from '../../../services/FileService';

var HomePage = function (_React$Component) {
  _inherits(HomePage, _React$Component);

  function HomePage(props) {
    _classCallCheck(this, HomePage);

    var _this = _possibleConstructorReturn(this, (HomePage.__proto__ || Object.getPrototypeOf(HomePage)).call(this, props));

    _this.handleChange = function (event, index, value) {
      return _this.setState({ value: value });
    };

    _this.state = {
      files: [],
      value: 1
    };
    return _this;
  }

  _createClass(HomePage, [{
    key: 'componentDidMount',
    value: function componentDidMount() {}
  }, {
    key: 'componentWillMount',
    value: function componentWillMount() {
      // console.log(this.props.location.pathname);
      this.setState({ files: FileService.getFiles() });
    }
  }, {
    key: 'render',
    value: function render() {

      return React.createElement(
        PageTemplate,
        { header: React.createElement(Header, null), footer: React.createElement(Footer, null) },
        this.state.files.length > 0 && React.createElement(HomeCarousel, { data: this.state.files }),
        React.createElement('br', null),
        React.createElement('br', null),
        ' ',
        this.state.files.length > 0 && React.createElement(
          'div',
          { className: 'align-center' },
          React.createElement(
            DropDownMenu,
            { value: this.state.value, onChange: this.handleChange },
            React.createElement(MenuItem, { value: 1, primaryText: 'Fichas recientes' }),
            React.createElement(MenuItem, { value: 2, primaryText: 'Fichas m\xE1s vistadas' }),
            React.createElement(MenuItem, { value: 3, primaryText: 'Fichas en peligro' }),
            React.createElement(MenuItem, { value: 4, primaryText: 'Fichas por actualizar' })
          )
        ),
        this.state.files.length > 0 && React.createElement(FileCarousel, { data: this.state.files }),
        React.createElement(CategoryCarousel, null),
        ' ',
        this.state.files.length > 0 && React.createElement(GroupCarousel, { data: this.state.files }),
        this.state.files.length > 0 && React.createElement(CommunityCarousel, { data: this.state.files })
      );
    }
  }]);

  return HomePage;
}(React.Component);

export default HomePage;