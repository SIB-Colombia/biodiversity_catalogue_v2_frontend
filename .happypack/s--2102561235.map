{"version":3,"sources":["src/components/pages/FileDetailPage/index.js"],"names":["FileDetailPage","props","state","id","validationResult","schema","form","model","schemaJson","formJson","onModelChange","bind","onValidate","setState","params","key","val","newModel","selectOrSet","console","log","result","validateBySchema","mapper","JSON","stringify","undefined","Component"],"mappings":"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","file":"index.js","sourceRoot":"/home/leo/htdocs/bio","sourcesContent":["import React, {PropTypes} from 'react';\nimport config from '../../config';\n// import fetch from 'isomorphic-fetch';\nimport Paper from 'material-ui/Paper';\nimport {Grid, Row, Col} from 'react-flexbox-grid';\nimport RaisedButton from 'material-ui/RaisedButton';\n\nimport {SchemaForm, utils} from 'react-schema-form';\nimport RcSelect from 'react-schema-form-rc-select/lib/RcSelect';\n\nimport {PageTemplate, Header, Footer} from 'components';\n\nclass FileDetailPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: null,\n      validationResult: {},\n      schema: {},\n      form: [],\n      model: {},\n      schemaJson: '',\n      formJson: ''\n    }\n    this.onModelChange = this.onModelChange.bind(this);\n    this.onValidate = this.onValidate.bind(this);\n  }\n\n  componentDidMount() {}\n\n  componentWillMount() {\n\n    this.setState({id: this.props.params.id})\n\n    this.setState({\n      \"schema\": {\n        \"type\": \"object\",\n        \"title\": \"Comment\",\n        \"properties\": {\n          \"name\": {\n            \"title\": \"Nombre\",\n            \"type\": \"string\",\n            \"default\": \"Leonardo R\"\n          },\n          \"email\": {\n            \"title\": \"Email\",\n            \"type\": \"string\",\n            \"pattern\": \"^\\\\S+@\\\\S+$\",\n            \"validationMessage\": \"Email must be of proper format: example@example\",\n            \"description\": \"Email will be used for evil.\"\n          },\n          \"environment\": {\n            \"type\": \"string\",\n            \"title\": \"Environment\",\n            \"enum\": [\n              \"LOCAL\",\n              \"SIT1\",\n              \"SIT2\",\n              \"SIT3\",\n              \"UAT1\",\n              \"UAT2\"\n            ]\n          },\n          \"comment\": {\n            \"title\": \"Comment\",\n            \"type\": \"string\",\n            \"maxLength\": 20,\n            \"validationMessage\": \"Don't be greedy! 20 Characters max please :)\",\n            \"description\": \"Please write your comment here.\"\n          }\n        },\n        \"required\": [\"name\", \"email\", \"comment\"]\n      },\n      \"form\": [\n        \"name\",\n        \"email\",\n        \"environment\", {\n          \"key\": \"comment\",\n          \"type\": \"textarea\",\n          \"placeholder\": \"Make a comment\"\n        }\n      ]\n\n    })\n\n  }\n\n  // onValidate() {\n  //   console.log('ExamplePage.onValidate is called');\n  //   let result = utils.validateBySchema(this.state.schema, this.state.model);\n  //   this.setState({validationResult: result});\n  // }\n\n  // onFormChange() {\n  //   try {\n  //     let f = JSON.parse(val);\n  //     this.setState({formJson: val, form: f});\n  //   } catch (e) {}\n  // }\n\n  onModelChange(key, val) {\n    // console.log('ExamplePage.onModelChange:', key, val);\n    var newModel = this.state.model;\n    utils.selectOrSet(key, newModel, val);\n    this.setState({model: newModel});\n    console.log(this.state.model);\n  }\n\n  onValidate() {\n    console.log('ExamplePage.onValidate is called');\n    let result = utils.validateBySchema(this.state.schema, this.state.model);\n    this.setState({validationResult: result});\n  }\n\n  render() {\n\n    var mapper = {\n      \"rc-select\": RcSelect\n    };\n\n    return (\n      <PageTemplate header={< Header />} footer={< Footer />}>\n        <SchemaForm schema={this.state.schema} form={this.state.form} model={this.state.model} onModelChange={this.onModelChange} mapper={mapper}/> {/* {this.state.model} */}\n        <div>\n          <RaisedButton primary={true} label=\"Validate\" onTouchTap={this.onValidate}/>\n          <pre>{JSON.stringify(this.state.validationResult,undefined,2,2)}</pre>\n        </div>\n        {/* here:<pre>{JSON.stringify(this.state.model)}</pre> */}\n      </PageTemplate>\n    )\n  }\n}\n\nexport default FileDetailPage;\n"]}