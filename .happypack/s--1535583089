var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _templateObject = _taggedTemplateLiteral(['\nbackground: ', ';\npadding: 0 0 55px 0;\n.space-card{\n  margin: 0px 10px;\n}\n.slick-next:before, .slick-prev:before {\n  font-size: 20px;\n  line-height: 1;\n  opacity: .75;\n  color: grey;\n}\nh3{\n  color:#333;\n  text-align: center;\n  font-weight: lighter;\n}\n'], ['\nbackground: ', ';\npadding: 0 0 55px 0;\n.space-card{\n  margin: 0px 10px;\n}\n.slick-next:before, .slick-prev:before {\n  font-size: 20px;\n  line-height: 1;\n  opacity: .75;\n  color: grey;\n}\nh3{\n  color:#333;\n  text-align: center;\n  font-weight: lighter;\n}\n']);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React from 'react';
import styled from 'styled-components';
import { Link, GroupCard, TitleSection } from 'components';
import Carousel from 'react-slick';
import { Grid, Row, Col } from 'react-flexbox-grid';
import { Card, CardActions, CardHeader, CardMedia, CardTitle, CardText } from 'material-ui/Card';
import FlatButton from 'material-ui/FlatButton';
import RaisedButton from 'material-ui/RaisedButton';
import ArrowBack from 'material-ui/svg-icons/hardware/keyboard-arrow-left';
import ArrowForward from 'material-ui/svg-icons/hardware/keyboard-arrow-right';
import { palette } from 'styled-theme';

var Wrapper = styled.div(_templateObject, palette('grayscale', 3));

var GroupCarousel = function (_React$Component) {
  _inherits(GroupCarousel, _React$Component);

  function GroupCarousel(props) {
    _classCallCheck(this, GroupCarousel);

    var _this = _possibleConstructorReturn(this, (GroupCarousel.__proto__ || Object.getPrototypeOf(GroupCarousel)).call(this, props));

    _this.next = _this.next.bind(_this);
    _this.previous = _this.previous.bind(_this);

    return _this;
  }

  _createClass(GroupCarousel, [{
    key: 'componentDidMount',
    value: function componentDidMount() {}
  }, {
    key: 'next',
    value: function next() {
      this.slider.slickNext();
    }
  }, {
    key: 'previous',
    value: function previous() {
      this.slider.slickPrev();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var settings = {
        dots: true,
        arrows: false,
        infinite: true,
        speed: 500,
        slidesToShow: 4,
        lazyLoad: true,
        slidesToScroll: 1,
        draggable: false,
        responsive: [{
          breakpoint: 768,
          settings: {
            slidesToShow: 1
          }
        }, {
          breakpoint: 1024,
          settings: {
            slidesToShow: 3
          }
        }, {
          breakpoint: 1368,
          settings: {
            slidesToShow: 5
          }
        }, {
          breakpoint: 2000,
          settings: {
            slidesToShow: 5
          }
        }, {
          breakpoint: 100000,
          settings: 'unslick'
        }]
      };

      return React.createElement(
        Wrapper,
        null,
        React.createElement(
          Grid,
          null,
          React.createElement(
            Row,
            null,
            React.createElement(
              Col,
              { xs: 12 },
              React.createElement(
                TitleSection,
                { align: 'center', color: 'grayscale-6', className: 'padding-top-3 padding-bottom-3' },
                'Grupos'
              ),
              React.createElement(
                Carousel,
                _extends({ ref: function ref(c) {
                    return _this2.slider = c;
                  } }, settings),
                this.props.data.map(function (record, i) {
                  return React.createElement(
                    'div',
                    { key: i },
                    React.createElement(GroupCard, { record: record })
                  );
                })
              )
            )
          ),
          React.createElement('br', null),
          React.createElement('br', null),
          React.createElement(
            'div',
            { className: 'align-center' },
            React.createElement(FlatButton, { icon: React.createElement(ArrowBack, null), onTouchTap: this.previous }),
            React.createElement(
              Link,
              { to: '/' },
              React.createElement(RaisedButton, { label: 'Ver todos los grupos', 'default': true })
            ),
            React.createElement(FlatButton, { icon: React.createElement(ArrowForward, null), onTouchTap: this.next })
          )
        )
      );
    }
  }]);

  return GroupCarousel;
}(React.Component);

export default GroupCarousel;