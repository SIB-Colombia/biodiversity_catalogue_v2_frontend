{"version":3,"sources":["src/components/atoms/Button/index.js"],"names":["fontSize","height","backgroundColor","transparent","disabled","foregroundColor","hoverBackgroundColor","hoverForegroundColor","styles","StyledLink","reverse","palette","theme","props","Anchor","a","StyledButton","button","Button","type","to","href","propTypes","bool","string","number","defaultProps"],"mappings":"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","file":"index.js","sourceRoot":"/home/leo/htdocs/bio","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { css } from 'styled-components'\nimport { Link } from 'react-router'\nimport { font, palette } from 'styled-theme'\nimport { ifProp } from 'styled-tools'\n\nconst fontSize = ({ height }) => `${height / 40}rem`\n\nconst backgroundColor = ({ transparent, disabled }) =>\n  transparent ? 'transparent' : palette(disabled ? 2 : 1)\n\nconst foregroundColor = ({ transparent, disabled }) =>\n  transparent ? palette(disabled ? 2 : 1) : palette('grayscale', 0, true)\n\nconst hoverBackgroundColor = ({ disabled, transparent }) => !disabled && !transparent && palette(0)\nconst hoverForegroundColor = ({ disabled, transparent }) => !disabled && transparent && palette(0)\n\nconst styles = css`\n  display: inline-flex;\n  font-family: ${font('primary')};\n  align-items: center;\n  white-space: nowrap;\n  font-size: ${fontSize};\n  border: 0.0625em solid ${ifProp('transparent', 'currentcolor', 'transparent')};\n  height: 2.5em;\n  justify-content: center;\n  text-decoration: none;\n  cursor: ${ifProp('disabled', 'default', 'pointer')};\n  appearance: none;\n  padding: 0 1em;\n  border-radius: 0.125em;\n  box-sizing: border-box;\n  pointer-events: ${ifProp('disabled', 'none', 'auto')};\n  transition: background-color 250ms ease-out, color 250ms ease-out, border-color 250ms ease-out;\n  background-color: ${backgroundColor};\n  color: ${foregroundColor};\n\n  &:hover, &:focus, &:active {\n    background-color: ${hoverBackgroundColor};\n    color: ${hoverForegroundColor};\n  }\n\n  &:focus {\n    outline: none\n  }\n`\n\nconst StyledLink = styled(({ disabled, transparent, reverse, palette, height, theme, ...props }) =>\n  <Link {...props} />\n)`${styles}`\nconst Anchor = styled.a`${styles}`\nconst StyledButton = styled.button`${styles}`\n\nconst Button = ({ type, ...props }) => {\n  if (props.to) {\n    return <StyledLink {...props} />\n  } else if (props.href) {\n    return <Anchor {...props} />\n  }\n  return <StyledButton {...props} type={type} />\n}\n\nButton.propTypes = {\n  disabled: PropTypes.bool,\n  palette: PropTypes.string,\n  transparent: PropTypes.bool,\n  reverse: PropTypes.bool,\n  height: PropTypes.number,\n  type: PropTypes.string,\n  to: PropTypes.string,\n  href: PropTypes.string,\n}\n\nButton.defaultProps = {\n  palette: 'primary',\n  type: 'button',\n  height: 40,\n}\n\nexport default Button\n"]}