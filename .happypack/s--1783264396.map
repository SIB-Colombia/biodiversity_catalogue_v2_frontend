{"version":3,"sources":["src/components/pages/FileDetailPage/index.js"],"names":["FileDetailPage","props","onModelChange","onValidate","onFormChange","onSchemaChange","state","id","validationResult","schema","form","model","schemaJson","formJson","setState","match","params","ReferenceSchema","key","val","console","log","newModel","selectOrSet","result","validateBySchema","f","JSON","parse","e","s","mapper","stringify","undefined","Component"],"mappings":"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","file":"index.js","sourceRoot":"/home/leo/htdocs/biodiversity_catalogue_v2_frontend","sourcesContent":["import React, {PropTypes} from 'react';\nimport Paper from 'material-ui/Paper';\nimport {PageTemplate, Header, Footer} from 'components';\nimport {Grid, Row, Col} from 'react-flexbox-grid';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport {SchemaForm, utils} from 'react-schema-form';\nimport RcSelect from 'react-schema-form-rc-select/lib/RcSelect';\n\nclass FileDetailPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: null,\n      validationResult: {},\n      schema: {},\n      form: [],\n      model: {},\n      schemaJson: '',\n      formJson: ''\n    }\n  }\n\n  componentDidMount() {}\n\n  componentWillMount() {\n    this.setState({id: this.props.match.params.id});\n    this.setState(ReferenceSchema);\n  }\n\n  onModelChange = (key, val) => {\n    console.log('ExamplePage.onModelChange:', key, val);\n    var newModel = this.state.model;\n    utils.selectOrSet(key, newModel, val);\n    this.setState({model: newModel});\n    console.log(this.state.model);\n  }\n\n  onValidate = () => {\n    console.log('ExamplePage.onValidate is called');\n    let result = utils.validateBySchema(this.state.schema, this.state.model);\n    this.setState({validationResult: result});\n  }\n\n  onFormChange = (val) => {\n    try {\n      let f = JSON.parse(val);\n      this.setState({formJson: val, form: f});\n    } catch (e) {}\n  }\n\n  onSchemaChange = () => {\n    try {\n      let s = JSON.parse(val);\n      this.setState({schemaJson: val, schema: s});\n    } catch (e) {}\n  }\n\n  render() {\n\n    var mapper = {\n      \"rc-select\": RcSelect\n    };\n\n    return (\n      <PageTemplate header={< Header />} footer={< Footer />}>\n        <Grid>\n          <Row>\n            <Paper>\n              <Col xs={12}>\n                <h3>Schema:</h3>\n                <pre>{JSON.stringify(this.state.schema,undefined,2,2)}</pre>\n                <h3>Form:</h3>\n                <pre>{JSON.stringify(this.state.form,undefined,2,2)}</pre>\n                <SchemaForm schema={this.state.schema} form={this.state.form} model={this.state.model} onModelChange={this.onModelChange} mapper={mapper}/>{/* {this.state.model} */}\n                <h3>Model:</h3>\n                <pre>{JSON.stringify(this.state.model,undefined,2,2)}</pre>\n                <h3>Validation:</h3>\n                <RaisedButton primary={true} label=\"Validate\" onTouchTap={this.onValidate}/>\n                <pre>{JSON.stringify(this.state.validationResult,undefined,2,2)}</pre>\n              </Col>\n            </Paper>\n          </Row>\n        </Grid>\n      </PageTemplate>\n    )\n  }\n}\n\nexport default FileDetailPage;\n"]}