{"version":3,"sources":["src/components/atoms/Input/index.js"],"names":["fontSize","height","styles","type","StyledTextarea","textarea","StyledSelect","select","StyledInput","input","Input","props","propTypes","string","reverse","bool","number","invalid","defaultProps"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;;;AAEO,IAAMA,8BAAW,SAAXA,QAAW;AAAA,MAAEC,MAAF,QAAEA,MAAF;AAAA,SAAiBA,SAAS,aAA1B;AAAA,CAAjB;;AAEP,IAAMC,qDACW,uBAAK,SAAL,CADX,EAMSF,QANT,EAOO,yBAAO;AAClBG,QAAM,UADY,EAAP,EACQ,gBADR,EAC0B,kBAD1B,CAPP,EASM,yBAAO;AACfA,QAAM,UADS,EAAP,EACW,MADX,EACmB,gBADnB,CATN,EAWK,0BAAQ,WAAR,EAAqB,CAArB,CAXL,EAYgB,0BAAQ,WAAR,EAAqB,CAArB,EAAwB,IAAxB,CAZhB,EAagB,yBAAO,SAAP,EAAkB,0BAAQ,QAAR,EAAkB,CAAlB,CAAlB,EAAwC,0BAAQ,WAAR,EAAqB,CAArB,CAAxC,CAbhB,CAAN;;AA0BI,IAAMC,iBAAiB,2BAAOC,QAAxB,mBAAoCH,MAApC,CAAN;AACA,IAAMI,eAAe,2BAAOC,MAAtB,mBAAgCL,MAAhC,CAAN;AACA,IAAMM,cAAc,2BAAOC,KAArB,mBAA8BP,MAA9B,CAAN;AACA,IAAMQ,QAAQ,SAARA,KAAQ,QAER;AAAA,MADDC,KACC;;AACJ,MAAIA,MAAMR,IAAN,KAAe,UAAnB,EAA+B;AAC7B,WAAO,8BAAC,cAAD,EAAoBQ,KAApB,CAAP;AACD,GAFD,MAEO,IAAIA,MAAMR,IAAN,KAAe,QAAnB,EAA6B;AAClC,WAAO,8BAAC,YAAD,EAAkBQ,KAAlB,CAAP;AACD;AACD,SAAO,8BAAC,WAAD,EAAiBA,KAAjB,CAAP;AACD,CATD;;AAWAD,MAAME,SAAN,GAAkB;AAChBT,QAAM,iBAAUU,MADA;AAEhBC,WAAS,iBAAUC,IAFH;AAGhBd,UAAQ,iBAAUe,MAHF;AAIhBC,WAAS,iBAAUF;AAJH,CAAlB;;AAOAL,MAAMQ,YAAN,GAAqB;AACnBf,QAAM,MADa;AAEnBF,UAAQ;AAFW,CAArB;;eAKeS,K;;;;;;;;;gCAtDNV,Q;;gCAEPE,M;;gCA0BIE,c;;gCACAE,Y;;gCACAE,W;;gCACAE,K","file":"index.js","sourceRoot":"/home/leo/htdocs/biodiversity_catalogue_v2_frontend","sourcesContent":["import React, {PropTypes} from 'react'\nimport styled, {css} from 'styled-components'\nimport {font, palette} from 'styled-theme'\nimport {ifProp} from 'styled-tools'\n\nexport const fontSize = ({height}) => `${height / 35.5555555556}rem`;\n\nconst styles = css `\n  font-family: ${font('primary')};\n  display: block;\n  width: 100%;\n  margin: 0;\n  box-sizing: border-box;\n  font-size: ${fontSize};\n  padding: ${ifProp({\n  type: 'textarea'}, '0.4444444444em', '0 0.4444444444em')};\n  height: ${ifProp({\n    type: 'textarea'}, 'auto', '2.2222222222em')};\n  color: ${palette('grayscale', 0)};\n  background-color: ${palette('grayscale', 0, true)};\n  border: 1px solid ${ifProp('invalid', palette('danger', 2), palette('grayscale', 3))};\n  border-radius: 2px;\n\n  &[type=checkbox], &[type=radio] {\n    display: inline-block;\n    border: 0;\n    border-radius: 0;\n    width: auto;\n    height: auto;\n    margin: 0 0.2rem 0 0;\n  }\n`;\n\n    const StyledTextarea = styled.textarea `${styles}`;\n    const StyledSelect = styled.select `${styles}`;\n    const StyledInput = styled.input `${styles}`;\n    const Input = ({\n      ...props\n    }) => {\n      if (props.type === 'textarea') {\n        return <StyledTextarea {...props}/>\n      } else if (props.type === 'select') {\n        return <StyledSelect {...props}/>\n      }\n      return <StyledInput {...props}/>\n    }\n\n    Input.propTypes = {\n      type: PropTypes.string,\n      reverse: PropTypes.bool,\n      height: PropTypes.number,\n      invalid: PropTypes.bool\n    }\n\n    Input.defaultProps = {\n      type: 'text',\n      height: 40\n    }\n\n    export default Input\n"]}