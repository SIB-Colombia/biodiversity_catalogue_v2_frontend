var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _templateObject = _taggedTemplateLiteral(['\n.leaflet-container {\n    height: 400px;\n    width: 100%;\n}\n'], ['\n.leaflet-container {\n    height: 400px;\n    width: 100%;\n}\n']);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React, { PropTypes } from 'react';
import { render } from 'react-dom';
import styled from 'styled-components';
import { Map, Marker, Popup, TileLayer } from 'react-leaflet';

var Wrapper = styled.div(_templateObject);
var position = [4.36, -74.04];

var HumboldtMap = function (_React$Component) {
  _inherits(HumboldtMap, _React$Component);

  function HumboldtMap(props) {
    _classCallCheck(this, HumboldtMap);

    return _possibleConstructorReturn(this, (HumboldtMap.__proto__ || Object.getPrototypeOf(HumboldtMap)).call(this, props));
  }

  _createClass(HumboldtMap, [{
    key: 'render',
    value: function render() {

      return React.createElement(
        Wrapper,
        null,
        React.createElement(
          Map,
          { center: position, zoom: 5 },
          React.createElement(TileLayer, { url: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png', attribution: '\xA9 <a href="http://osm.org/copyright">OpenStreetMap</a> contributors' })
        )
      );
      /*
      <Marker position={position}>
      <Popup>
      	<span>A pretty CSS3 popup.<br/>Easily customizable.</span>
      </Popup>
      </Marker>
      */
    }
  }]);

  return HumboldtMap;
}(React.Component);

export default HumboldtMap;