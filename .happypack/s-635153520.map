{"version":3,"sources":["src/auth/index.js"],"names":["http","isAuthenticated","middleware","hasRole","me","signin","signup","logout","getToken","setToken","getUser","setUser","clean","rootMe","type","data","body","FormData","key","append","config","method","headers","mock","component","console","log","current","JSON","parse","localStorage","getItem","USER","server","local","then","response","json","_id","user","error","message","catch","token","err","window","location","reload","TOKEN","setItem","Promise","reject","resolve","stringify","clear"],"mappings":"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","file":"index.js","sourceRoot":"/home/leo/htdocs/biodiversity_catalogue_v2_frontend","sourcesContent":["import fetch from 'isomorphic-fetch';\nimport Const from '../const';\nvar rootMe = null;\n\n//Http\nexport function http(type, data) {\n\n  var body = new FormData();\n  if (data)\n    for (var key in data)\n      body.append(key, data[key]);\n\n  data = data\n    ? body\n    : null;\n\n  let config = {\n    method: type,\n    // mode: 'cors',\n    headers: {\n      'Authorization': getToken()\n    },\n    body: data\n  }\n\n  return config;\n\n}\n\n//is authenticated\nexport function isAuthenticated() {\n  return getUser();\n}\n\n//middleware\nvar mock = null;\n\nexport function middleware(component) {\n\n  console.log('mock', mock);\n\n  let current = mock || JSON.parse(localStorage.getItem(Const.USER));\n\n\n  console.log(current);\n  if (current) {\n    return component;\n  } else {\n    console.log('no apto');\n    // window.location.href = '';\n  }\n\n}\n\n//has Role\nexport function hasRole() {}\n\n//Me\n\nexport function me() {\n\n  console.log('me');\n\n  return fetch(`${Const.server.local}/api/user/me`, http('GET')).then((response) => {\n    return response.json()\n  }).then((data) => {\n\n    if (data._id) {\n      return setUser(data).then(user => {\n        return user;\n      });\n    } else {\n      throw {error: data.message};\n    }\n\n  }).catch(err => {\n    clean();\n  })\n\n}\n\n//signin\nexport function signin(user) {\n  return fetch(`${Const.server.local}/auth/local`, http('POST', user)).then((response) => {\n    return response.json()\n  }).then((data) => {\n\n    if (data.token) {\n      return setToken(data).then(token => {\n        return token;\n      });\n    } else {\n      throw {error: data.error};\n    }\n  }).catch(err => {\n    return err;\n  })\n}\n\n//signup\nexport function signup(user) {\n  return fetch(`${Const.server.local}/api/user`, http('POST', user)).then((response) => {\n    return response.json()\n  }).then((data) => {\n    return data\n  }).catch(err => {\n    return err;\n  })\n}\n\n//logout\nexport function logout() {\n  clean();\n  window.location.reload();\n}\n\n//Get Token\nexport function getToken() {\n  return localStorage.getItem(Const.TOKEN);\n}\n\n//Set Token\nexport function setToken(data) {\n  try {\n    localStorage.setItem(Const.TOKEN, data.token);\n  } catch (err) {\n    return Promise.reject(err.message);\n  }\n  return Promise.resolve(data.token || null);\n}\n\n//Get User\nexport function getUser() {\n  return JSON.parse(localStorage.getItem(Const.USER));\n}\n\n//Set User\nexport function setUser(data) {\n  try {\n    localStorage.setItem(Const.USER, JSON.stringify(data));\n  } catch (err) {\n    return Promise.reject(err.message);\n  }\n  return Promise.resolve(rootMe = data || null);\n}\n\n//Clean\nexport function clean() {\n  localStorage.clear();\n}\n"]}