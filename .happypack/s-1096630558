var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _templateObject = _taggedTemplateLiteral(['\n\n.back{\n  margin-top: 60px;\n}\n  .btnFilters{\n    position: fixed;\n    left: 15px;\n    bottom: 15px;\n    z-index: 10;\n  }\n\n'], ['\n\n.back{\n  margin-top: 60px;\n}\n  .btnFilters{\n    position: fixed;\n    left: 15px;\n    bottom: 15px;\n    z-index: 10;\n  }\n\n']);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React from 'react';
import styled from 'styled-components';
import Carousel from 'react-slick';
import { Grid, Row, Col } from 'react-flexbox-grid';
import { Card, CardActions, CardHeader, CardMedia, CardTitle, CardText } from 'material-ui/Card';
import FlatButton from 'material-ui/FlatButton';
import RaisedButton from 'material-ui/RaisedButton';
import FloatingActionButton from 'material-ui/FloatingActionButton';
import Menu from 'material-ui/svg-icons/navigation/menu';

import ArrowBack from 'material-ui/svg-icons/hardware/keyboard-arrow-left';
import ArrowForward from 'material-ui/svg-icons/hardware/keyboard-arrow-right';

import Drawer from 'material-ui/Drawer';
import Chip from 'material-ui/Chip';

import ContentFilter from 'material-ui/svg-icons/content/filter-list';

import { List, ListItem } from 'material-ui/List';
import ActionGrade from 'material-ui/svg-icons/action/grade';
import Subheader from 'material-ui/Subheader';
import _ from 'lodash';

import { Link } from 'components';

var Wrapper = styled.div(_templateObject);

var FileSearchMenu = function (_React$Component) {
  _inherits(FileSearchMenu, _React$Component);

  function FileSearchMenu(props) {
    _classCallCheck(this, FileSearchMenu);

    var _this = _possibleConstructorReturn(this, (FileSearchMenu.__proto__ || Object.getPrototypeOf(FileSearchMenu)).call(this, props));

    _this.handleRequestDelete = function (data) {
      // console.log(data);
      //Chip
      _this.chipData = _this.state.chipData;
      var chipToDelete = _this.chipData.map(function (chip) {
        return chip.value;
      }).indexOf(data.value);
      _this.chipData.splice(chipToDelete, 1);
      _this.setState({ chipData: _this.chipData });
      //schema update
      _this.schema = _this.state.schema;
      _this.schema[data.i].items.unshift(data);
      _this.setState({ schema: _this.schema });
    };

    _this.handleAddChip = function (record, i, j) {
      //Chip
      _this.chipData = _this.state.chipData;
      record.i = i;
      record.j = j;
      _this.chipData.push(record);
      _this.setState({ chipData: _this.chipData });
      //schema update
      _this.schema = _this.state.schema;
      _this.schema[i].items.splice(j, 1);
      _this.setState({ schema: _this.schema });
    };

    _this.handleToggleMenu = function () {
      return _this.setState({
        open: !_this.state.open
      });
    };

    _this.state = {
      open: false,
      schema: [{
        'category': 'Grupos Biológicos',
        'items': [{
          name: 'Anfibios',
          value: 1634
        }, {
          name: 'Aves',
          value: 2755
        }, {
          name: 'Hongos',
          value: 3345
        }, {
          name: 'Insectos',
          value: 4355
        }, {
          name: 'Mamíferos',
          value: 5674
        }, {
          name: 'Peces',
          value: 6325
        }, {
          name: 'Plantas',
          value: 73577
        }, {
          name: 'Reptiles',
          value: 8455
        }]
      }, {
        'category': 'Departamentos',
        'items': [{
          name: 'Cundinamarca',
          value: 1832
        }, {
          name: 'Boyacá',
          value: 2124
        }]
      }, {
        'category': 'Ecosistemas',
        'items': [{
          name: 'Bosque tropical',
          value: 135565
        }, {
          name: 'Desierto',
          value: 2456
        }, {
          name: 'Bosque seco',
          value: 33466
        }, {
          name: 'Páramo',
          value: 46225
        }, {
          name: 'Bosque de niebla',
          value: 51123
        }, {
          name: 'Humedales',
          value: 665433
        }]
      }],
      chipData: []
    };

    _this.styles = {
      chip: {
        margin: 4
      },
      wrapper: {
        display: 'flex',
        flexWrap: 'wrap'
      }
    };
    return _this;
  }

  _createClass(FileSearchMenu, [{
    key: 'componentDidMount',
    value: function componentDidMount() {}
  }, {
    key: 'renderChip',
    value: function renderChip(data) {
      var _this2 = this;

      return React.createElement(
        Chip,
        { className: 'animated fadeInUp', key: data.value, onRequestDelete: function onRequestDelete() {
            return _this2.handleRequestDelete(data);
          }, style: this.styles.chip },
        data.name
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var subcat = this.state.schema.map(function (record, i) {
        return record.items.map(function (subrecord, j) {
          return React.createElement(ListItem, { key: j, primaryText: subrecord.name, onTouchTap: function onTouchTap() {
              return _this3.handleAddChip(subrecord, i, j);
            }, leftIcon: React.createElement(ActionGrade, null) });
        });
      });
      var listItems = this.state.schema.map(function (record, i) {
        return React.createElement(ListItem, { key: i, nestedItems: subcat[i], primaryText: record.category, initiallyOpen: true, primaryTogglesNestedList: true });
      });

      return React.createElement(
        Wrapper,
        null,
        React.createElement(
          'div',
          { className: 'btnFilters animated fadeInLeft' },
          React.createElement(
            FloatingActionButton,
            { onTouchTap: this.handleToggleMenu, className: 'btn-primary-floating' },
            React.createElement(Menu, null)
          )
        ),
        React.createElement(
          Drawer,
          { open: this.state.open },
          React.createElement(
            List,
            null,
            React.createElement(RaisedButton, { label: 'Ocultar Men\xFA', onTouchTap: this.handleToggleMenu, icon: React.createElement(ArrowBack, null), fullWidth: true, labelPosition: 'after', className: 'back' }),
            React.createElement(
              Subheader,
              null,
              'Filtros activos'
            ),
            React.createElement(
              'div',
              { style: this.styles.wrapper },
              this.state.chipData.map(this.renderChip, this)
            ),
            listItems
          )
        )
      );
    }
  }]);

  return FileSearchMenu;
}(React.Component);

export default FileSearchMenu;