{"version":3,"sources":["src/components/molecules/Gallery/index.js"],"names":["Gallery","openLightbox","closeLightbox","gotoPrevious","gotoNext","gotoImage","handleClickImage","next","previous","state","lightboxIsOpen","currentImage","index","event","preventDefault","setState","props","images","length","slider","slickNext","slickPrev","settings","dots","arrows","infinite","speed","draggable","centerMode","responsive","breakpoint","slidesToShow","gallery","filter","i","src","map","obj","classes","box","e","thumbnail","img","c","heading","subheading","renderGallery","showThumbnails","theme","displayName","propTypes","string","array","bool","gutter","small","large","create","width","textAlign","landscape","square","paddingBottom","source","border","display","height","maxWidth"],"mappings":"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","file":"index.js","sourceRoot":"/home/leo/htdocs/biodiversity_catalogue_v2_frontend","sourcesContent":["import React, {Component, PropTypes} from 'react';\nimport {css, StyleSheet} from 'aphrodite/no-important';\nimport {Link} from 'components';\nimport {Grid, Row, Col} from 'react-flexbox-grid';\nimport Lightbox from 'react-images';\nimport Carousel from 'react-slick';\nimport ArrowBack from 'material-ui/svg-icons/hardware/keyboard-arrow-left';\nimport ArrowForward from 'material-ui/svg-icons/hardware/keyboard-arrow-right';\nimport FlatButton from 'material-ui/FlatButton';\n\nclass Gallery extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      lightboxIsOpen: false,\n      currentImage: 0\n    };\n  }\n  openLightbox = (index, event) => {\n    event.preventDefault();\n    this.setState({currentImage: index, lightboxIsOpen: true});\n  }\n  closeLightbox = () => {\n    this.setState({currentImage: 0, lightboxIsOpen: false});\n  }\n  gotoPrevious = () => {\n    this.setState({\n      currentImage: this.state.currentImage - 1\n    });\n  }\n  gotoNext = () => {\n    this.setState({\n      currentImage: this.state.currentImage + 1\n    });\n  }\n  gotoImage = (index) => {\n    this.setState({currentImage: index});\n  }\n  handleClickImage = () => {\n    if (this.state.currentImage === this.props.images.length - 1)\n      return;\n\n    this.gotoNext();\n  }\n\n  //Carousel\n\n  next = () => {\n    this.slider.slickNext()\n  }\n  previous = () => {\n    this.slider.slickPrev()\n  }\n\n  renderGallery() {\n\n    var settings = {\n      dots: true,\n      arrows: false,\n      infinite: true,\n      speed: 500,\n      draggable: false,\n      centerMode: false,\n      responsive: [\n        {\n          breakpoint: 768,\n          settings: {\n            slidesToShow: 1\n          }\n        }, {\n          breakpoint: 1024,\n          settings: {\n            slidesToShow: 3\n          }\n        }, {\n          breakpoint: 1368,\n          settings: {\n            slidesToShow: 5\n          }\n        }, {\n          breakpoint: 2000,\n          settings: {\n            slidesToShow: 5\n          }\n        }, {\n          breakpoint: 100000,\n          settings: 'unslick'\n        }\n      ]\n    };\n\n    const {images} = this.props;\n\n    if (!images)\n      return;\n\n    const gallery = images.filter(i => i.src).map((obj, i) => {\n      return (\n        <div key={i} className={css(classes.box)}>\n          <center>\n            <a href={obj.src} onClick={(e) => this.openLightbox(i, e)}>\n              <img src={obj.thumbnail} className={css(classes.img)}/>\n            </a>\n          </center>\n        </div>\n      );\n    });\n\n    return (\n      <div className={css(classes.gallery)}>\n        <Carousel ref={c => this.slider = c} {...settings}>\n          {gallery}\n        </Carousel>\n        <br/>\n        <br/>\n        <div className=\"align-center\">\n          <FlatButton icon={< ArrowBack />} onTouchTap={this.previous}/>\n          <FlatButton icon={< ArrowForward />} onTouchTap={this.next}/>\n        </div>\n      </div>\n\n    );\n  }\n  render() {\n\n    return (\n      <div className=\"section\">\n        {this.props.heading && <h2>{this.props.heading}</h2>}\n        {this.props.subheading && <p>{this.props.subheading}</p>}\n        {this.renderGallery()}\n        <Lightbox currentImage={this.state.currentImage} images={this.props.images} isOpen={this.state.lightboxIsOpen} onClickImage={this.handleClickImage} onClickNext={this.gotoNext} onClickPrev={this.gotoPrevious} onClickThumbnail={this.gotoImage} onClose={this.closeLightbox} showThumbnails={this.props.showThumbnails} theme={this.props.theme}/>\n      </div>\n    );\n  }\n};\n\nGallery.displayName = 'Gallery';\n\nGallery.propTypes = {\n  heading: PropTypes.string,\n  images: PropTypes.array,\n  showThumbnails: PropTypes.bool,\n  subheading: PropTypes.string\n};\n\nconst gutter = {\n  small: 2,\n  large: 4\n};\nconst classes = StyleSheet.create({\n  img: {\n    width: '95%'\n  },\n\n  box: {\n    textAlign: 'center'\n  },\n\n  gallery: {},\n\n  // orientation\n  landscape: {\n    width: '15%'\n  },\n  square: {\n    paddingBottom: 0,\n    width: '40%',\n\n    '@media (min-width: 500px)': {\n      paddingBottom: 0\n    }\n  },\n\n  // actual <img />\n  source: {\n    border: 0,\n    display: 'block',\n    height: 'auto',\n    maxWidth: '100%',\n    width: 'auto'\n  }\n});\n\nexport default Gallery;\n"]}