var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _templateObject = _taggedTemplateLiteral(['\n.paper{\n  padding: 10px 0 0px 0;\n}\n.paper-horizontal{\n  /*padding: 15px 20px;*/\n  h3{\n    font-size: 23px;\n    font-weight: lighter;\n  }\n  .img-media{\n    text-align: center;\n    img{\n      height: 100%;\n      width: 100%;\n    }\n  }\n  .options{\n    padding: 0px 20px 0px 0px;\n  }\n\n}\n.col{\n  margin: 10px 0px;\n}\n.col-horizontal{\n  margin-top: 10px;\n}\n'], ['\n.paper{\n  padding: 10px 0 0px 0;\n}\n.paper-horizontal{\n  /*padding: 15px 20px;*/\n  h3{\n    font-size: 23px;\n    font-weight: lighter;\n  }\n  .img-media{\n    text-align: center;\n    img{\n      height: 100%;\n      width: 100%;\n    }\n  }\n  .options{\n    padding: 0px 20px 0px 0px;\n  }\n\n}\n.col{\n  margin: 10px 0px;\n}\n.col-horizontal{\n  margin-top: 10px;\n}\n']);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React from 'react';
import styled from 'styled-components';
import { Link } from 'components';
import Carousel from 'react-slick';
import { Grid, Row, Col } from 'react-flexbox-grid';
import { Card, CardActions, CardHeader, CardMedia, CardTitle, CardText } from 'material-ui/Card';
import Divider from 'material-ui/Divider';
import Paper from 'material-ui/Paper';
import FlatButton from 'material-ui/FlatButton';
import RaisedButton from 'material-ui/RaisedButton';
import ArrowBack from 'material-ui/svg-icons/hardware/keyboard-arrow-left';
import ArrowForward from 'material-ui/svg-icons/hardware/keyboard-arrow-right';
import Reorder from 'material-ui/svg-icons/action/reorder';
import Drawer from 'material-ui/Drawer';
import { List, ListItem } from 'material-ui/List';
import ActionGrade from 'material-ui/svg-icons/action/grade';
import Subheader from 'material-ui/Subheader';
import DropDownMenu from 'material-ui/DropDownMenu';
import SelectField from 'material-ui/SelectField';
import MenuItem from 'material-ui/MenuItem';
import FontIcon from 'material-ui/FontIcon';
import IconMenu from 'material-ui/IconMenu';
import IconButton from 'material-ui/IconButton';
import NavigationExpandMoreIcon from 'material-ui/svg-icons/navigation/expand-more';
import ActionAndroid from 'material-ui/svg-icons/action/android';
import ViewList from 'material-ui/svg-icons/action/view-list';
import { blue500, orange800, greenA200 } from 'material-ui/styles/colors';
import Badge from 'material-ui/Badge';
import Comment from 'material-ui/svg-icons/communication/comment';
import GridOn from 'material-ui/svg-icons/image/grid-on';

var Wrapper = styled.div(_templateObject);

var FileSearchResult = function (_React$Component) {
  _inherits(FileSearchResult, _React$Component);

  function FileSearchResult(props) {
    _classCallCheck(this, FileSearchResult);

    var _this = _possibleConstructorReturn(this, (FileSearchResult.__proto__ || Object.getPrototypeOf(FileSearchResult)).call(this, props));

    _this.handleChange = function (event, index, value) {
      return _this.setState({ value: value });
    };

    _this.handleChange2 = function (event, index, value2) {
      return _this.setState({ value2: value2 });
    };

    _this.handleView = function (value) {
      _this.setState({ mode: value });
    };

    _this.state = {
      mode: 'grid',
      value: 1,
      value2: 1
    };
    return _this;
  }

  _createClass(FileSearchResult, [{
    key: 'componentDidMount',
    value: function componentDidMount() {}
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return React.createElement(
        Wrapper,
        null,
        React.createElement(
          Grid,
          null,
          React.createElement(
            Row,
            { className: 'animated fadeInDown' },
            React.createElement(
              Col,
              { xs: 12 },
              React.createElement('br', null),
              React.createElement(
                Paper,
                { className: 'paper' },
                React.createElement(
                  Row,
                  null,
                  React.createElement(Col, { xs: 12, sm: 6, md: 6, lg: 6 }),
                  React.createElement(
                    Col,
                    { xs: 12, sm: 6, md: 6, lg: 6 },
                    React.createElement(
                      Row,
                      null,
                      React.createElement(
                        Col,
                        { xs: 12, sm: 4, md: 4, lg: 4, className: 'align-right' },
                        React.createElement(
                          IconButton,
                          { tooltip: 'modo grilla', touch: true, tooltipPosition: 'bottom-center', onTouchTap: function onTouchTap() {
                              return _this2.handleView('grid');
                            } },
                          React.createElement(GridOn, { color: this.state.mode == 'grid' ? orange800 : '' })
                        ),
                        React.createElement(
                          IconButton,
                          { tooltip: 'modo lista', touch: true, tooltipPosition: 'bottom-center', onTouchTap: function onTouchTap() {
                              return _this2.handleView('list');
                            } },
                          React.createElement(ViewList, { color: this.state.mode == 'list' ? orange800 : '' })
                        )
                      ),
                      React.createElement(
                        Col,
                        { xs: 12, sm: 4, md: 4, lg: 4, className: 'align-center' },
                        React.createElement(
                          SelectField,
                          { value: this.state.value, onChange: this.handleChange, fullWidth: true },
                          React.createElement(MenuItem, { value: 1, primaryText: 'A/Z' }),
                          React.createElement(MenuItem, { value: 2, primaryText: 'Visitas' }),
                          React.createElement(MenuItem, { value: 3, primaryText: 'El peligro' })
                        )
                      ),
                      React.createElement(
                        Col,
                        { xs: 12, sm: 4, md: 4, lg: 4, className: 'align-center' },
                        React.createElement(
                          SelectField,
                          { value: this.state.value2, onChange: this.handleChange2, fullWidth: true },
                          React.createElement(MenuItem, { value: 1, primaryText: 'Mejor coincidencia' }),
                          React.createElement(MenuItem, { value: 2, primaryText: 'M\xE1s visitados' }),
                          React.createElement(MenuItem, { value: 3, primaryText: 'Mejores valorados' })
                        )
                      )
                    )
                  )
                )
              )
            ),
            this.state.mode == 'grid' && this.props.data.map(function (record, i) {
              return React.createElement(
                Col,
                { key: i, xs: 12, sm: 6, md: 3, lg: 3, className: 'col animated fadeIn' },
                React.createElement(
                  Link,
                  { to: '/file/summary/' + record.id },
                  React.createElement(
                    Card,
                    { className: 'space' },
                    React.createElement(
                      CardMedia,
                      null,
                      React.createElement('img', { src: record.image })
                    ),
                    React.createElement(
                      CardTitle,
                      { title: record.name, subtitle: record.description },
                      React.createElement(
                        'div',
                        { className: 'box-history align-right' },
                        React.createElement(Badge, { badgeContent: 'EX', className: 'badge cr' }),
                        React.createElement(Badge, { badgeContent: 'CR', className: 'badge ex' }),
                        React.createElement(Badge, { badgeContent: 'EN', className: 'badge en' })
                      )
                    ),
                    React.createElement(
                      CardActions,
                      { className: 'align-center' },
                      React.createElement(
                        FlatButton,
                        { fullWidth: true, className: 'btn-secondary' },
                        React.createElement(Comment, null),
                        ' ',
                        record.comment
                      )
                    )
                  )
                )
              );
            }),
            this.state.mode == 'list' && this.props.data.map(function (record, i) {
              return React.createElement(
                Col,
                { key: i, xs: 12, sm: 12, md: 10, lg: 8, lgOffset: 2, mdOffset: 1, className: 'col-horizontal animated fadeIn' },
                React.createElement(
                  Link,
                  { to: '/file/summary/' + record.id },
                  React.createElement(
                    Paper,
                    { className: 'paper-horizontal' },
                    React.createElement(
                      Row,
                      null,
                      React.createElement(
                        Col,
                        { xs: 12, sm: 4, md: 4, lg: 4, className: 'img-media' },
                        React.createElement('img', { src: record.image })
                      ),
                      React.createElement(
                        Col,
                        { xs: 12, sm: 8, md: 8, lg: 8 },
                        React.createElement(
                          'div',
                          { className: 'options' },
                          React.createElement(
                            'h3',
                            null,
                            record.name
                          ),
                          React.createElement(
                            FlatButton,
                            { className: 'btn-secondary inverse' },
                            React.createElement(Comment, null),
                            ' ',
                            record.comment
                          ),
                          React.createElement(
                            'p',
                            { className: 'align-justify' },
                            'Lorem ipsum dolor sit amet, consectetur piscing elipiscing elipiscing eliadipiscing elit. Morbi luctus leo non sapien tempus, ac cursus lectus tristique. Donec vitae mattis ante. Donec vitae mattis ante'
                          ),
                          React.createElement(
                            'div',
                            { className: 'box-history align-right' },
                            React.createElement(Badge, { badgeContent: 'EX', className: 'badge cr' }),
                            React.createElement(Badge, { badgeContent: 'CR', className: 'badge ex' }),
                            React.createElement(Badge, { badgeContent: 'EN', className: 'badge en' })
                          )
                        )
                      )
                    )
                  )
                )
              );
            })
          )
        )
      );
    }
  }]);

  return FileSearchResult;
}(React.Component);

export default FileSearchResult;